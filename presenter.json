{"code":{"__map":true,"values":[["1","const init = (() => {\n    const script = document.createElement(\"script\");\n    script.id = \"markdownit\";\n    script.src = \"./markdown-it.min.js\";\n    const promise = new Promise((resolve) => {\n      script.onload = () => {\n         resolve(window.markdownit);\n      };\n    });\n\n    document.head.querySelector(\"#markdownit\")?.remove();\n    document.head.appendChild(script);\n\n    const container = document.createElement(\"div\");\n    container.id = \"container\";\n    document.body.querySelector(\"#container\")?.remove();\n    document.body.appendChild(container);\n    container.innerHTML = `\n   <div id=\"result\"></div>\n   <div id=\"editorContainer\"></div>\n`.trim();\n    return {markdownit: promise, container};\n})();\n\nconst resolved = Events.resolvePart(init);\nconst md = resolved.markdownit({html: true});\nconst container = resolved.container;\n"],["7","\nconst result = md.render(editorString);\n\nconst resultDiv = ((result, container) => {\n  const div = document.createElement(\"div\");\n  div.id = \"renkon\";\n  container.querySelector(\"#renkon\")?.remove();\n  container.querySelector(\"#result\").appendChild(div);\n  div.innerHTML = result;\n  return div;\n})(result, container);\n\nconst editor = newEditor(\"0\", \"\", callback, notify);\n\nconst callback = (id, update) => notify[0]({id, update});\nconst editorString = editorUpdate.update.state.doc.toString();\ncontainer.querySelector(\"#editorContainer\").appendChild(editor.dom);"],["12","const css = `\n#container, html, body {\n    width: 100%;\n    height: 100%;\n    margin: 0px;\n}\n\n#container {\n    display: flex;\n}\n\n#result {\n   width: 50%;\n   height: 100%;\n}\n\n#renkon: {\n  width: 50%;\n  height: 100%;\n}\n\n#editor {\n   width: 50%;\n   height: 100%;\n   border: 1px solid black;\n   padding: 6px;\n   white-space: pre-wrap;\n}\n\n`.trim();\n\n((css) => {\n    document.head.querySelector(\"#presenter-style\")?.remove();\n    const style = document.createElement(\"style\");\n    style.id = \"presenter-style\";\n    style.textContent = css;\n    document.head.appendChild(style);\n})(css);\n"],["16","const editorUpdate = Events.observe((callback) => {\n   notify[0] = (...v) => callback(...v);\n   return () => notify.shift();\n})\nconst notify = [];"],["20","const newEditor = (id, doc, callback) => {\n    const mirror = window.CodeMirror;\n    const editor = new mirror.EditorView({\n        doc: doc || `console.log(\"hello\")`,\n\n        extensions: [\n            mirror.basicSetup,\n            mirror.EditorView.lineWrapping,\n            mirror.EditorView.updateListener.of((viewUpdate) => callback(id, viewUpdate)),\n            mirror.EditorView.editorAttributes.of({\"class\": \"editor\"}),\n            mirror.keymap.of([mirror.indentWithTab])\n        ],\n    });\n    editor.dom.id = `${id}-editor`;\n    return editor;\n};\n\n"]]},"padTitle":"presenter","positions":{"map":{"__map":true,"values":[["1",{"height":524.4655550463073,"id":"1","type":"move","width":504.0837015602515,"x":-524.1259090677601,"y":-338.0066104522246}],["7",{"height":362.1925644232181,"id":"7","type":"move","width":529.3862306058246,"x":456.34278817280574,"y":-341.06517937929596}],["12",{"height":725.5182194513718,"id":"12","type":"move","width":469.13645372397707,"x":1017.049638244591,"y":-337.5811385415381}],["16",{"height":120,"id":"16","type":"move","width":456.8808522227081,"x":-15.356742047935128,"y":-340.79567305856744}],["20",{"height":337.2020843679614,"id":"20","type":"move","width":648.9149020581096,"x":75.45954840884885,"y":51.062490566243696}]]}},"titles":{"map":{"__map":true,"values":[["1",{"id":"1","state":false,"title":"untitled"}],["7",{"id":"7","state":false,"title":"Rendering"}],["12",{"id":"12","state":false,"title":"CSS"}],["16",{"id":"16","state":false,"title":"editorString"}],["20",{"id":"20","state":false,"title":"newEditor"}]]}},"version":1,"windowTypes":{"map":{"__map":true,"values":[["1","code"],["7","code"],["12","code"],["16","code"],["20","code"]]}},"windows":["1","7","12","16","20"],"zIndex":{"map":{"__map":true,"values":[["1",105],["7",106],["12",103],["16",100],["20",109]]}}}